//Exemplooooooo 
  class Personagem {
    nome: string;
    poder: number;

    constructor(nome: string, poder: number){
       this.nome = nome;
       this.poder = poder;
    }

    atacar() {
        console.log(`${this.nome} atacou com um poder de ${this.poder}`)
        }

        flutuar(){
            console.log(`${this.nome} flutuou!`)
        }
}


const saitma = new Personagem("Saitama", 500000);
const goku = new Personagem("Guku", 8001);
const anakin = new Personagem("Darth Vader", 27000);


saitma.atacar();
goku.atacar();
anakin.flutuar();
anakin.atacar();

/*
Exerc√≠cios.üò´
Pesquise e traga 2 exemplos da vida real que poderiam ser representados como classes em POO.

CELULAR:
atributos: marca, modelo, armazenamneto, bateria, sistemaOperacional
m√©todos: ligar(), desligar(), tirarFoto(),

ALUNO:
atributos: nome, idade, matr√≠cula, curso, notas
m√©todos: estudar(), calcularMedia(), seApresentar()


Compare POO com Programa√ß√£o Funcional: quais as principais diferen√ßas?
-POO √© mais sobre modelar entidade e seus comportamentos 
-Funcional √© mais sobre transformar dados busando fun√ßoes puras


D√™ exemplos de linguagens que usam fortemente POO.
Java
tudo gira em torno de classes e objetos 
C++
muito usada em jogos,sistemas embarcados e aplica√ß√µes de alto desempenho
*/

//PR√°TICA
//Crie uma classe Ninja

class Ninja {
    nome: string;
    aldeia: string;
    jutsos: string[];


    constructor(nome: string, aldeia: string, jutsos: string[]){
       this.nome = nome;
       this.aldeia = aldeia;
       this.jutsos = jutsos;
    }

    usarJustso(){
        console.log(`${this.nome} Usou o Justso: ${this.jutsos}`)
        
    }

}

const Kakashi = new Ninja("Kakashi","da aldeia da folha",["Bomba do Drag√£o de √Åguaüêâ","Chidori‚ùå",
    "Estilo √Ågua: T√©cnica da Bomba do Tubar√£o de √Åguaü¶à"]);
const Zabuza = new Ninja("Zabuza","da aldeia da nevoa",["T√©cnica da Grande Cachoeiraüöø",
    "Espada Rotativa Voadora‚öîÔ∏è", "Suir≈ç no Jutsu ü™º"]);


Zabuza.usarJustso();
Kakashi.usarJustso();




//Crie uma classe H√©roi com:
class Heroi {
    nome: string;
    poder: number
    universo: string;


    constructor(nome: string, poder:number, universo: string){
       this.nome = nome;
       this.poder = poder;
       this.universo = universo;
    }
    
   atacar() {
        console.log(`${this.nome} do universo da ${this.universo} atacou com o poder de: ${this.poder}`)
        }
}
const Batman = new Heroi("Batman", 5000,"DC");
const homemaranha = new Heroi("homearanha", 4888 , "Marvel");

Batman.atacar();
homemaranha.atacar();
